import { ValidatorInterface } from '../validator.interface';
import { AbstractValidator } from '../abstract.validator';
import { Pattern } from '../pattern';

const patterns = [
  {
    regexp:
      /^(ABG|ABI|AIB|AIC|ALF|ALS|ALZ|ANA|ANG|ANK|APD|ARN|ART|ASD|ASL|ASZ|AUR|AZE|BAD|BAR|BBG|BBL|BCH|BED|BEI|BEL|BER|BGD|BGL|BID|BIN|BIR|BIT|BIW|BKS|BLB|BLK|BNA|BOG|BOH|BOR|BOT|BRA|BRB|BRG|BRI|BRK|BRL|BRV|BSB|BSK|BTF|BÜD|BUL|BUR|BÜR|BÜS|BÜZ|BWL|BYL|BZA|CAS|CHA|CHL|CLP|CLZ|COC|COE|CUX|DAH|DAN|DAU|DBR|DEG|DEL|DGF|DIL|DIN|DIZ|DKB|DLG|DON|DUD|DÜW|EBE|EBN|EBS|ECK|EHI|EIC|EIH|EIL|EIN|EIS|EMD|EMS|ERB|ERH|ERK|ERZ|ESA|ESB|ESW|EUT|FAL|FDB|FDS|FEU|FFB|FKB|FLÖ|FOR|FRG|FRI|FRW|FTL|FÜS|GAN|GAP|GDB|GEL|GEM|GEO|GER|GHA|GHC|GLA|GMN|GNT|GOA|GOH|GRA|GRH|GRI|GRM|GRS|GRZ|GTH|GUB|GUN|GVM|HAB|HAL|HAM|HAS|HBN|HBS|HCH|HDH|HDL|HEB|HEF|HEI|HEL|HER|HET|HGN|HGW|HHM|HIG|HIP|HMU|HMÜ|HOG|HOH|HOL|HOM|HOR|HÖS|HOT|HRO|HSK|HST|HÜN|HUS|HVL|HWI|IGB|ILL|JEV|JÜL|KAR|KEH|KEL|KEM|KIB|KLE|KLT|KLZ|KÖN|KÖT|KOZ|KÖZ|KRU|KÜN|KUS|KYF|LAN|LAT|LAU|LBS|LBZ|LDK|LDS|LEO|LER|LEV|LIB|LIF|LIN|LIP|LÖB|LOH|LOS|LRO|LSA|LSN|LSZ|LÜD|LUK|LÜN|LUP|LWL|MAB|MAI|MAK|MAL|MAR|MED|MEG|MEI|MEK|MEL|MEP|MER|MES|MET|MGH|MGN|MHL|MIL|MKK|MOD|MOL|MON|MOS|MSE|MSH|MSP|MST|MTK|MTL|MÜB|MÜL|MÜN|MÜR|MVL|MYK|MZG|NAB|NAI|NAU|NDH|NEA|NEB|NEC|NEN|NES|NEU|NEW|NIB|NMB|NMS|NOH|NOL|NOM|NOR|NRÜ|NRW|NVP|NWM|OAL|OBB|OBG|OCH|OHA|ÖHR|OHV|OHZ|OLD|OPR|OSL|OTT|OTW|OVI|OVL|OVP|PAF|PAN|PAR|PCH|PEG|PER|PIR|PLÖ|PRÜ|QFT|QLB|RDG|REG|REH|REI|RID|RIE|ROD|ROF|ROH|ROK|ROL|ROS|ROT|ROW|RPL|RSL|RÜD|RÜG|RWL|SAB|SAD|SÄK|SAL|SAN|SAO|SAW|SBG|SBK|SCZ|SDH|SDL|SDT|SEB|SEE|SEF|SEL|SFA|SFB|SFT|SGH|SHA|SHG|SHK|SHL|SHS|SIG|SIM|SLE|SLF|SLG|SLK|SLN|SLS|SLÜ|SLZ|SMÜ|SNH|SOB|SOG|SOK|SOL|SÖM|SON|SPB|SPN|SPR|SRB|SRO|STA|STB|STD|STE|STH|STL|STO|SUL|SÜW|SWA|SWZ|SZB|TBB|TDO|TET|TGO|THL|THW|TIR|TÖL|TÖN|TUT|UEM|UER|UFF|USI|VAI|VEC|VER|VIB|VIE|VIT|VOF|VOH|WAF|WAK|WAM|WAN|WAR|WAT|WBS|WDA|WEB|WEG|WEI|WEL|WEM|WEN|WER|WES|WHV|WIL|WIS|WIT|WIZ|WLG|WMS|WND|WOB|WOH|WOL|WOR|WOS|WRN|WSF|WST|WSW|WTL|WTM|WUG|WUM|WUN|WUR|WZL|ZEL|ZIG)([a-zA-Z]{1,2})([0-9]{1,4}[EH]?)$/,
    formatter(matches): string {
      return matches[1] + ' ' + matches[2] + ' ' + matches[3];
    },
  },
  {
    regexp:
      /^(AA|AB|AC|AE|AH|AK|AL|AM|AN|AÖ|AP|AR|AS|AT|AU|AW|AZ|BA|BB|BC|BD|BE|BF|BG|BH|BI|BK|BL|BM|BN|BO|BÖ|BP|BR|BS|BT|BU|BW|BZ|CA|CB|CE|CO|CR|CT|CW|DA|DB|DD|DE|DG|DH|DI|DL|DM|DN|DO|DS|DT|DU|DW|DZ|EA|EB|ED|EE|EF|EG|EH|EI|EL|EM|EN|ER|ES|EU|EW|FB|FD|FF|FG|FH|FI|FL|FN|FO|FR|FS|FT|FÜ|FW|FZ|GA|GC|GD|GE|GF|GG|GI|GK|GL|GM|GN|GÖ|GP|GR|GS|GT|GÜ|GV|GW|GZ|HA|HB|HC|HD|HE|HF|HG|HH|HI|HK|HL|HM|HN|HO|HP|HR|HS|HU|HV|HW|HX|HY|HZ|IK|IL|IN|IS|IZ|JB|JE|JL|KA|KB|KC|KE|KF|KG|KH|KI|KK|KL|KM|KN|KO|KR|KS|KT|KU|KW|KY|LA|LB|LC|LD|LE|LF|LG|LH|LI|LK|LL|LM|LN|LÖ|LP|LR|LS|LU|MA|MB|MC|MD|ME|MG|MH|MI|MK|ML|MM|MN|MO|MQ|MR|MS|MT|MÜ|MW|MY|MZ|NB|ND|NE|NF|NH|NI|NK|NL|NM|NÖ|NP|NR|NT|NU|NW|NY|NZ|OA|OB|OC|OD|OE|OF|OG|OH|OK|OL|OP|OR|OS|OZ|PA|PB|PE|PF|PI|PK|PL|PM|PN|PR|PS|PW|PZ|RA|RC|RD|RE|RG|RH|RI|RL|RM|RN|RO|RP|RS|RT|RU|RV|RW|RY|RZ|SB|SC|SE|SF|SG|SH|SI|SK|SL|SM|SN|SO|SP|SR|ST|SU|SW|SY|SZ|TE|TF|TG|TO|TP|TR|TS|TT|TÜ|ÜB|UE|UH|UL|UM|UN|VB|VG|VK|VL|VR|VS|WA|WB|WD|WE|WF|WG|WI|WK|WL|WM|WN|WO|WR|WS|WT|WÜ|WW|WZ|ZE|ZI|ZP|ZR|ZS|ZW|ZZ)([a-zA-Z]{1,2})([0-9]{1,4}[EH]?)$/,
    formatter(matches): string {
      return matches[1] + ' ' + matches[2] + ' ' + matches[3];
    },
  },
  {
    regexp: /^([ABCDEFGHJKLMNPRSVWXYZ])([a-zA-Z]{1,2})([0-9]{1,4}[EH]?)$/,
    formatter(matches): string {
      return matches[1] + ' ' + matches[2] + ' ' + matches[3];
    },
  },
  {
    /** EXPORT LICENSE PLATE **/
    regexp:
      /^(ABG|ABI|AIB|AIC|ALF|ALS|ALZ|ANA|ANG|ANK|APD|ARN|ART|ASD|ASL|ASZ|AUR|AZE|BAD|BAR|BBG|BBL|BCH|BED|BEI|BEL|BER|BGD|BGL|BID|BIN|BIR|BIT|BIW|BKS|BLB|BLK|BNA|BOG|BOH|BOR|BOT|BRA|BRB|BRG|BRI|BRK|BRL|BRV|BSB|BSK|BTF|BÜD|BUL|BUR|BÜR|BÜS|BÜZ|BWL|BYL|BZA|CAS|CHA|CHL|CLP|CLZ|COC|COE|CUX|DAH|DAN|DAU|DBR|DEG|DEL|DGF|DIL|DIN|DIZ|DKB|DLG|DON|DUD|DÜW|EBE|EBN|EBS|ECK|EHI|EIC|EIH|EIL|EIN|EIS|EMD|EMS|ERB|ERH|ERK|ERZ|ESA|ESB|ESW|EUT|FAL|FDB|FDS|FEU|FFB|FKB|FLÖ|FOR|FRG|FRI|FRW|FTL|FÜS|GAN|GAP|GDB|GEL|GEM|GEO|GER|GHA|GHC|GLA|GMN|GNT|GOA|GOH|GRA|GRH|GRI|GRM|GRS|GRZ|GTH|GUB|GUN|GVM|HAB|HAL|HAM|HAS|HBN|HBS|HCH|HDH|HDL|HEB|HEF|HEI|HEL|HER|HET|HGN|HGW|HHM|HIG|HIP|HMU|HMÜ|HOG|HOH|HOL|HOM|HOR|HÖS|HOT|HRO|HSK|HST|HÜN|HUS|HVL|HWI|IGB|ILL|JEV|JÜL|KAR|KEH|KEL|KEM|KIB|KLE|KLT|KLZ|KÖN|KÖT|KOZ|KÖZ|KRU|KÜN|KUS|KYF|LAN|LAT|LAU|LBS|LBZ|LDK|LDS|LEO|LER|LEV|LIB|LIF|LIN|LIP|LÖB|LOH|LOS|LRO|LSA|LSN|LSZ|LÜD|LUK|LÜN|LUP|LWL|MAB|MAI|MAK|MAL|MAR|MED|MEG|MEI|MEK|MEL|MEP|MER|MES|MET|MGH|MGN|MHL|MIL|MKK|MOD|MOL|MON|MOS|MSE|MSH|MSP|MST|MTK|MTL|MÜB|MÜL|MÜN|MÜR|MVL|MYK|MZG|NAB|NAI|NAU|NDH|NEA|NEB|NEC|NEN|NES|NEU|NEW|NIB|NMB|NMS|NOH|NOL|NOM|NOR|NRÜ|NRW|NVP|NWM|OAL|OBB|OBG|OCH|OHA|ÖHR|OHV|OHZ|OLD|OPR|OSL|OTT|OTW|OVI|OVL|OVP|PAF|PAN|PAR|PCH|PEG|PER|PIR|PLÖ|PRÜ|QFT|QLB|RDG|REG|REH|REI|RID|RIE|ROD|ROF|ROH|ROK|ROL|ROS|ROT|ROW|RPL|RSL|RÜD|RÜG|RWL|SAB|SAD|SÄK|SAL|SAN|SAO|SAW|SBG|SBK|SCZ|SDH|SDL|SDT|SEB|SEE|SEF|SEL|SFA|SFB|SFT|SGH|SHA|SHG|SHK|SHL|SHS|SIG|SIM|SLE|SLF|SLG|SLK|SLN|SLS|SLÜ|SLZ|SMÜ|SNH|SOB|SOG|SOK|SOL|SÖM|SON|SPB|SPN|SPR|SRB|SRO|STA|STB|STD|STE|STH|STL|STO|SUL|SÜW|SWA|SWZ|SZB|TBB|TDO|TET|TGO|THL|THW|TIR|TÖL|TÖN|TUT|UEM|UER|UFF|USI|VAI|VEC|VER|VIB|VIE|VIT|VOF|VOH|WAF|WAK|WAM|WAN|WAR|WAT|WBS|WDA|WEB|WEG|WEI|WEL|WEM|WEN|WER|WES|WHV|WIL|WIS|WIT|WIZ|WLG|WMS|WND|WOB|WOH|WOL|WOR|WOS|WRN|WSF|WST|WSW|WTL|WTM|WUG|WUM|WUN|WUR|WZL|ZEL|ZIG|AA|AB|AC|AE|AH|AK|AL|AM|AN|AÖ|AP|AR|AS|AT|AU|AW|AZ|BA|BB|BC|BD|BE|BF|BG|BH|BI|BK|BL|BM|BN|BO|BÖ|BP|BR|BS|BT|BU|BW|BZ|CA|CB|CE|CO|CR|CT|CW|DA|DB|DD|DE|DG|DH|DI|DL|DM|DN|DO|DS|DT|DU|DW|DZ|EA|EB|ED|EE|EF|EG|EH|EI|EL|EM|EN|ER|ES|EU|EW|FB|FD|FF|FG|FH|FI|FL|FN|FO|FR|FS|FT|FÜ|FW|FZ|GA|GC|GD|GE|GF|GG|GI|GK|GL|GM|GN|GÖ|GP|GR|GS|GT|GÜ|GV|GW|GZ|HA|HB|HC|HD|HE|HF|HG|HH|HI|HK|HL|HM|HN|HO|HP|HR|HS|HU|HV|HW|HX|HY|HZ|IK|IL|IN|IS|IZ|JB|JE|JL|KA|KB|KC|KE|KF|KG|KH|KI|KK|KL|KM|KN|KO|KR|KS|KT|KU|KW|KY|LA|LB|LC|LD|LE|LF|LG|LH|LI|LK|LL|LM|LN|LÖ|LP|LR|LS|LU|MA|MB|MC|MD|ME|MG|MH|MI|MK|ML|MM|MN|MO|MQ|MR|MS|MT|MÜ|MW|MY|MZ|NB|ND|NE|NF|NH|NI|NK|NL|NM|NÖ|NP|NR|NT|NU|NW|NY|NZ|OA|OB|OC|OD|OE|OF|OG|OH|OK|OL|OP|OR|OS|OZ|PA|PB|PE|PF|PI|PK|PL|PM|PN|PR|PS|PW|PZ|RA|RC|RD|RE|RG|RH|RI|RL|RM|RN|RO|RP|RS|RT|RU|RV|RW|RY|RZ|SB|SC|SE|SF|SG|SH|SI|SK|SL|SM|SN|SO|SP|SR|ST|SU|SW|SY|SZ|TE|TF|TG|TO|TP|TR|TS|TT|TÜ|ÜB|UE|UH|UL|UM|UN|VB|VG|VK|VL|VR|VS|WA|WB|WD|WE|WF|WG|WI|WK|WL|WM|WN|WO|WR|WS|WT|WÜ|WW|WZ|ZE|ZI|ZP|ZR|ZS|ZW|ZZ|A|B|C|D|E|F|G|H|J|K|L|M|N|P|R|S|V|W|X|Y|Z)([0-9]{1,4})([A-Z])$/,
    formatter(matches): string {
      return matches[1] + ' ' + matches[2] + ' ' + matches[3];
    },
  },
  {
    regexp: /^(0)-?([0-9]{2,3})-([0-9]{1,3})$/,
    formatter(matches): string {
      return matches[1] + ' ' + matches[2] + '-' + matches[3];
    },
    normalizer(licensePlateNumber: string): string {
      return licensePlateNumber.toUpperCase().replace(/·|_|\.|:|,|;|\s/g, '');
    },
  },
];

export class Validator extends AbstractValidator implements ValidatorInterface {
  constructor() {
    super(patterns as Pattern[]);
  }
}
